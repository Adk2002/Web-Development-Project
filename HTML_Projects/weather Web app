<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="card">
        <div class="search">
            <input type="text" placeholder="Enter City Name", spellcheck="false">
            <button><img src="image/search-02.svg"></button>
        </div>
        <div class="weather">
            <img class="weather-icon" src="image/cloudy.png">     
            <h1 class="temp">22c</h1>
            <h2 class="city">New York</h2>
        </div>
        <div class="details">
            <div class="col">
                <img src="image/humidity.png">
                <div>
                    <p class="humidity">50%</p>
                    <p>Humidity</p>
                </div>
            </div>
            <div class="col">
                <img src="image/windy.png">
                <div>
                    <p class="wind">15km/h</p>
                    <p>wind speed</p>
                </div>
            </div>
        </div>
    </div>
    <script src="index.js"></script>
</body>
</html>


* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    background-color: #00fb8a;
}

.card {
    width: 90%;
    max-width: 470px;
    background: linear-gradient(136deg, rgb(11, 185, 185), #5b548a);
    color: #fff;
    margin: 100px auto 0;
    border-radius: 25px;
    padding: 40px 35px;
    text-align: center;
    transition: all 0.2s ease;
}

.card:hover {
    box-shadow: 12px 12px 2px -2px rgba(0, 0, 255, 0.762);
}

.search {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.search input {
    border: 0;
    outline: 0;
    background: rgb(1, 253, 249);
    color: #1f0a0a;
    padding: 10px 25px;
    height: 60px;
    border-radius: 30px;
    flex: 1;
    margin-right: 16px;
    font-size: 18px;
    transition: 0.2s ease-in-out;
}

.search input:hover {
    transform: scale(1.1);
    box-shadow: 12px 12px 2px -2px rgba(0, 0, 12, 0.762);

}

.search button {
    border: 0;
    outline: 0;
    background: rgb(1, 253, 249);
    border-radius: 50%;
    width: 60px;
    height: 60px;
    cursor: pointer;
}

.weather-icon {
    align-items: center;
    height: 120px;
    width: auto;
    justify-content: center;
}

.weather h1 {
    font-size: 80px;
    font-weight: 500;
}

.weather h2 {
    font-size: 45px;
    font-weight: 400;
    margin-top: -10px;
}


.details {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
    margin-top: 5px;
}

.col {
    display: flex;
    align-items: center;
    text-align: left;
}

.col img {
    height: 55px;
    width: auto;
    mix-blend-mode: overlay;
    width: auto;
    margin-right: 10px;
}

.humidity,
.wind {
    font-size: 28px;
    margin-top: -6px;

}


const searhBox = document.querySelector(".search input");
const searhBttn = document.querySelector(".search button");
const weatherIcon = document.querySelector(".weather-icon");

const apiKey = "825270d22434d44bd4a36700f7fcf798";
const apiUrl = "https://api.openweathermap.org/data/2.5/weather?units=metric&q=";

async function checkWeather(city){
    const respose = await fetch(apiUrl + city + `&appid=${apiKey}`);
    let data = await respose.json();

    console.log(data);

    //main app updation part begins
    document.querySelector(".city").innerHTML = data.name; //it will update the city name
    //the Math.round will roundoft the celsious value
    document.querySelector(".temp").innerHTML = Math.round(data.main.temp) + "&deg;c"; //it will update the tempreture
    document.querySelector(".humidity").innerHTML = data.main.humidity + " %"; //it will update the humidity
    document.querySelector(".wind").innerHTML = data.wind.speed + "km/h";

    //code to update the icons
    if(data.weather[0].main == "Clouds")
    {
        weatherIcon.src = "image/cloudy.png";
    }
    else if(data.weather[0].main == "Clear")
    {
        weatherIcon.src = "image/clear.png";
    }
    else if(data.weather[0].main == "Rain")
    {
        weatherIcon.src = "image/rain.png";
    }
    else if(data.weather[0].main == "Haze")
    {
        weatherIcon.src = "image/haze.png";
    }
    else if(data.weather[0].main == "Drizzle")
    {
        weatherIcon.src = "image/precipitation.png";
    }
    else if(data.weather[0].main == "Thunderstrom")
    {
        weatherIcon.src = "image/thunder.png";
    }
}

searhBttn.addEventListener("click", ()=>{
    checkWeather(searhBox.value);
})
